# 문제
# 땅 위에 달팽이가 있다. 이 달팽이는 높이가 V미터인 나무 막대를 올라갈 것이다.

# 달팽이는 낮에 A미터 올라갈 수 있다. 하지만, 밤에 잠을 자는 동안 B미터 미끄러진다. 또, 정상에 올라간 후에는 미끄러지지 않는다.

# 달팽이가 나무 막대를 모두 올라가려면, 며칠이 걸리는지 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 세 정수 A, B, V가 공백으로 구분되어서 주어진다. (1 ≤ B < A ≤ V ≤ 1,000,000,000)

# 출력
# 첫째 줄에 달팽이가 나무 막대를 모두 올라가는데 며칠이 걸리는지 출력한다.


A, B, V = map(int, input().split())

def go_snail(A, B, V):
    # total = ((V - B) + (A - B - 1)) // (A - B)
    total =( V + A -2*B - 1 )// (A - B)
    

    print(total)

go_snail(A, B, V)


# 이 문제에서 핵심은 바로 낮에 무조건 도착한다는 것이다. 
# 그래서 현재 위치보다 언제 최대 위치에 도달했냐가 중요하다 
# 최대 위치에 도달하는 순간 끝나버리니까 
# 그래서 최대 위치를 계산하게 된다면 첫날은 A , 둘째날은 A - B, 셋쨰날은 A - 2B 이런식으로 최대 위치가 정해진다. 
# V-B // A-B 인 이유는 결국 하루에 가는 거리 중에서 -B => 어차피 마지막날은 무조건 낮에 도착하니까 -B를 해주는 것이다. 
